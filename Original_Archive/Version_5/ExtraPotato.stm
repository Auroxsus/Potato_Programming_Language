;--------------------------------------------------------------
; ExtraPotato.stm
;--------------------------------------------------------------
; SVC numbers
SVC_DONOTHING          EQU       0D0                  ; force context switch
SVC_TERMINATE          EQU       0D1
SVC_READ_INTEGER       EQU       0D10
SVC_WRITE_INTEGER      EQU       0D11
SVC_READ_FLOAT         EQU       0D20
SVC_WRITE_FLOAT        EQU       0D21
SVC_READ_BOOLEAN       EQU       0D30
SVC_WRITE_BOOLEAN      EQU       0D31
SVC_READ_CHARACTER     EQU       0D40
SVC_WRITE_CHARACTER    EQU       0D41
SVC_WRITE_ENDL         EQU       0D42
SVC_READ_STRING        EQU       0D50
SVC_WRITE_STRING       EQU       0D51
SVC_INITIALIZE_HEAP    EQU       0D90
SVC_ALLOCATE_BLOCK     EQU       0D91
SVC_DEALLOCATE_BLOCK   EQU       0D92

                       ORG       0X0000

                       JMP       PROGRAMMAIN
;    1 || ExtraPotato.p by Auroxsus
;    2 || French Fry Productions
;    3 || Description: test <CHOOSEStatement>
;    4 ||-------------------------------------------------------------
;    5 
;    6 POTATO
;    7 
;    8 ||-------------------------------------------------------------
;    9 || Without ELSE
;   10 ||-------------------------------------------------------------
;   11    FRY "ONE (default)",PEEL.
; **** =========
; **** PROGRAM module (   6)
; **** =========
PROGRAMMAIN            EQU       *
                       PUSH      #RUNTIMESTACK        ; set SP
                       POPSP     
                       PUSHA     STATICDATA           ; set SB
                       POPSB     
                       PUSH      #HEAPBASE            ; initialize heap
                       PUSH      #HEAPSIZE
                       SVC       #SVC_INITIALIZE_HEAP
                       CALL      PROGRAMBODY0010
                       PUSHA     SB:0D0
                       SVC       #SVC_WRITE_STRING
                       SVC       #SVC_WRITE_ENDL
                       PUSH      #0D0                 ; terminate with status = 0
                       SVC       #SVC_TERMINATE

PROGRAMBODY0010        EQU       *
; **** PRINT statement (  11)
;   12    CHOOSE
                       PUSHA     SB:0D28
                       SVC       #SVC_WRITE_STRING
;   13       WHEN (false): 
                       SVC       #SVC_WRITE_ENDL
; **** CHOOSE statement (  12)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
;   14       WHEN (true): 
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0040
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
                       JMP       E0020
I0040                  EQU       *
;   15          FRY "2".
                       PUSH      #0XFFFF
;   16          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0050
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  15)
                       PUSHA     SB:0D43
                       SVC       #SVC_WRITE_STRING
;   17       WHEN (true): FRY "3",PEEL.
; **** PRINT statement (  16)
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0020
I0050                  EQU       *
                       PUSH      #0XFFFF
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0060
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  17)
;   18    COOKEDPOTATO
                       PUSHA     SB:0D46
                       SVC       #SVC_WRITE_STRING
;   19 
;   20    FRY PEEL,"ONE (explicit)",PEEL.
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0020
I0060                  EQU       *
E0020                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0030
E0030                  EQU       *
; **** PRINT statement (  20)
                       SVC       #SVC_WRITE_ENDL
;   21    CHOOSE ONE
                       PUSHA     SB:0D49
                       SVC       #SVC_WRITE_STRING
                       SVC       #SVC_WRITE_ENDL
;   22       WHEN (true): FRY "1\n".
; **** CHOOSE statement (  21)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
                       PUSH      #0XFFFF
;   23       WHEN (true): 
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0090
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  22)
                       PUSHA     SB:0D65
                       SVC       #SVC_WRITE_STRING
                       JMP       E0070
I0090                  EQU       *
;   24          FRY "2".
                       PUSH      #0XFFFF
;   25          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0100
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  24)
                       PUSHA     SB:0D70
                       SVC       #SVC_WRITE_STRING
;   26       WHEN (true): FRY "3",PEEL.
; **** PRINT statement (  25)
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0070
I0100                  EQU       *
                       PUSH      #0XFFFF
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0110
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  26)
;   27    COOKEDPOTATO
                       PUSHA     SB:0D73
                       SVC       #SVC_WRITE_STRING
;   28 
;   29    FRY PEEL,"ALL",PEEL.
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0070
I0110                  EQU       *
E0070                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0080
E0080                  EQU       *
; **** PRINT statement (  29)
                       SVC       #SVC_WRITE_ENDL
;   30    CHOOSE ALL
                       PUSHA     SB:0D76
                       SVC       #SVC_WRITE_STRING
                       SVC       #SVC_WRITE_ENDL
;   31       WHEN (true): FRY "1\n". 
; **** CHOOSE statement (  30)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
                       PUSH      #0XFFFF
;   32       WHEN (false): 
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0140
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  31)
                       PUSHA     SB:0D81
                       SVC       #SVC_WRITE_STRING
I0140                  EQU       *
;   33          FRY "2".
                       PUSH      #0X0000
;   34          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0150
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  33)
                       PUSHA     SB:0D86
                       SVC       #SVC_WRITE_STRING
;   35       WHEN (true): FRY "3",PEEL.
; **** PRINT statement (  34)
                       SVC       #SVC_WRITE_ENDL
I0150                  EQU       *
                       PUSH      #0XFFFF
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0160
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  35)
;   36    COOKEDPOTATO
                       PUSHA     SB:0D89
                       SVC       #SVC_WRITE_STRING
;   37 
;   38 ||-------------------------------------------------------------
                       SVC       #SVC_WRITE_ENDL
;   39 || With ELSE
;   40 ||-------------------------------------------------------------
;   41    FRY "ONE (default)",PEEL.
I0160                  EQU       *
E0120                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0130
E0130                  EQU       *
; **** PRINT statement (  41)
;   42    CHOOSE
                       PUSHA     SB:0D92
                       SVC       #SVC_WRITE_STRING
;   43       WHEN (false): 
                       SVC       #SVC_WRITE_ENDL
; **** CHOOSE statement (  42)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
;   44       WHEN (false): 
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0190
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
                       JMP       E0170
I0190                  EQU       *
;   45          FRY "2".
                       PUSH      #0X0000
;   46          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0200
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  45)
                       PUSHA     SB:0D107
                       SVC       #SVC_WRITE_STRING
;   47       WHEN (false): FRY "3",PEEL.
; **** PRINT statement (  46)
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0170
I0200                  EQU       *
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0210
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  47)
;   48       ELSE
                       PUSHA     SB:0D110
                       SVC       #SVC_WRITE_STRING
;   49          FRY "ELSE ONE (default)",PEEL.
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0170
I0210                  EQU       *
E0170                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0180
; **** PRINT statement (  49)
;   50    COOKEDPOTATO
                       PUSHA     SB:0D113
                       SVC       #SVC_WRITE_STRING
;   51 
;   52    FRY "ONE (explicit)",PEEL.
                       SVC       #SVC_WRITE_ENDL
E0180                  EQU       *
; **** PRINT statement (  52)
;   53    CHOOSE
                       PUSHA     SB:0D133
                       SVC       #SVC_WRITE_STRING
;   54       WHEN (false): 
                       SVC       #SVC_WRITE_ENDL
; **** CHOOSE statement (  53)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
;   55       WHEN (true): 
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0240
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
                       JMP       E0220
I0240                  EQU       *
;   56          FRY "2".
                       PUSH      #0XFFFF
;   57          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0250
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  56)
                       PUSHA     SB:0D149
                       SVC       #SVC_WRITE_STRING
;   58       WHEN (false): FRY "3",PEEL.
; **** PRINT statement (  57)
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0220
I0250                  EQU       *
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0260
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  58)
;   59       ELSE
                       PUSHA     SB:0D152
                       SVC       #SVC_WRITE_STRING
;   60          FRY "ELSE ONE (explicit)",PEEL.
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0220
I0260                  EQU       *
E0220                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0230
; **** PRINT statement (  60)
;   61    COOKEDPOTATO
                       PUSHA     SB:0D155
                       SVC       #SVC_WRITE_STRING
;   62 
;   63    FRY "ALL",PEEL.
                       SVC       #SVC_WRITE_ENDL
E0230                  EQU       *
; **** PRINT statement (  63)
;   64    CHOOSE
                       PUSHA     SB:0D176
                       SVC       #SVC_WRITE_STRING
;   65       WHEN (false): 
                       SVC       #SVC_WRITE_ENDL
; **** CHOOSE statement (  64)
                       PUSH      #0D0                 ; count-of-true <expressions> := 0
;   66       WHEN (false): 
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0290
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
                       JMP       E0270
I0290                  EQU       *
;   67          FRY "2".
                       PUSH      #0X0000
;   68          FRY PEEL.
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0300
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  67)
                       PUSHA     SB:0D181
                       SVC       #SVC_WRITE_STRING
;   69       WHEN (false): FRY "3",PEEL.
; **** PRINT statement (  68)
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0270
I0300                  EQU       *
                       PUSH      #0X0000
                       SETT      
                       DISCARD   #0D1
                       JMPNT     I0310
                       PUSH      #0D1                 ; increment count-of-true <expressions>
                       ADDI      
; **** PRINT statement (  69)
;   70       ELSE
                       PUSHA     SB:0D184
                       SVC       #SVC_WRITE_STRING
;   71          FRY "ELSE ALL",PEEL.
                       SVC       #SVC_WRITE_ENDL
                       JMP       E0270
I0310                  EQU       *
E0270                  EQU       *
                       SETNZPI                        ; if ( count-of-true <expressions> = 0 ) goto E???2
                       DISCARD   #0D1
                       JMPNZ     E0280
; **** PRINT statement (  71)
;   72    COOKEDPOTATO
                       PUSHA     SB:0D187
                       SVC       #SVC_WRITE_STRING
;   73 COOKEDPOTATO
                       SVC       #SVC_WRITE_ENDL
;   74 
E0280                  EQU       *
                       RETURN    
; **** =========
; **** END (  73)
; **** =========

;------------------------------------------------------------
; Issue "Run-time error #X..X near line #X..X" to handle run-time errors
;------------------------------------------------------------
HANDLERUNTIMEERROR     EQU       *
                       SVC       #SVC_WRITE_ENDL
                       PUSHA     SB:0D197
                       SVC       #SVC_WRITE_STRING
                       SVC       #SVC_WRITE_INTEGER
                       PUSHA     SB:0D215
                       SVC       #SVC_WRITE_STRING
                       SVC       #SVC_WRITE_INTEGER
                       SVC       #SVC_WRITE_ENDL
                       PUSH      #0D1
                       SVC       #SVC_TERMINATE

;------------------------------------------------------------
; Static allocation of global data and PROGRAM module data
;------------------------------------------------------------
STATICDATA             EQU       *
                       DS        "Normal program termination"
                       DS        "ONE (default)"
                       DS        "2"
                       DS        "3"
                       DS        "ONE (explicit)"
                       DS        "1\n"
                       DS        "2"
                       DS        "3"
                       DS        "ALL"
                       DS        "1\n"
                       DS        "2"
                       DS        "3"
                       DS        "ONE (default)"
                       DS        "2"
                       DS        "3"
                       DS        "ELSE ONE (default)"
                       DS        "ONE (explicit)"
                       DS        "2"
                       DS        "3"
                       DS        "ELSE ONE (explicit)"
                       DS        "ALL"
                       DS        "2"
                       DS        "3"
                       DS        "ELSE ALL"
                       DS        "Run-time error #"
                       DS        " near line #"

;------------------------------------------------------------
; Heap space for dynamic memory allocation (to support future POTATO syntax)
;------------------------------------------------------------
HEAPBASE               EQU       *
HEAPSIZE               EQU       0B0001000000000000   ; 8K bytes = 4K words

;------------------------------------------------------------
; Run-time stack
;------------------------------------------------------------
RUNTIMESTACK           EQU       0XFFFE
