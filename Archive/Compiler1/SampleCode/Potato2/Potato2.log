Page   1  Potato2.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0000               1  ;--------------------------------------------------------------
0X0000               2  ; Potato2.stm
0X0000               3  ;--------------------------------------------------------------
0X0000               4  ; SVC numbers
0X0000               5  SVC_DONOTHING          EQU       0D0                  ; force context switch
0X0000               6  SVC_TERMINATE          EQU       0D1
0X0000               7  SVC_READ_INTEGER       EQU       0D10
0X0000               8  SVC_WRITE_INTEGER      EQU       0D11
0X0000               9  SVC_READ_FLOAT         EQU       0D20
0X0000              10  SVC_WRITE_FLOAT        EQU       0D21
0X0000              11  SVC_READ_BOOLEAN       EQU       0D30
0X0000              12  SVC_WRITE_BOOLEAN      EQU       0D31
0X0000              13  SVC_READ_CHARACTER     EQU       0D40
0X0000              14  SVC_WRITE_CHARACTER    EQU       0D41
0X0000              15  SVC_WRITE_ENDL         EQU       0D42
0X0000              16  SVC_READ_STRING        EQU       0D50
0X0000              17  SVC_WRITE_STRING       EQU       0D51
0X0000              18  SVC_INITIALIZE_HEAP    EQU       0D90
0X0000              19  SVC_ALLOCATE_BLOCK     EQU       0D91
0X0000              20  SVC_DEALLOCATE_BLOCK   EQU       0D92
0X0000              21  
0X0000              22                         ORG       0X0000
0X0000              23  
0X0000  800003      24                         JMP       PROGRAMMAIN
0X0003              25  ;    1 || ------------------------------------------------------------
0X0003              26  ;    2 || Auroxsus
0X0003              27  ;    3 || Description: POTATO Scanner program
0X0003              28  ;    4 || Potato2.p
0X0003              29  ;    5 || ------------------------------------------------------------
0X0003              30  ;    6 crisp mainCrisp () {
0X0003              31  ;    7    bite "Howdy"
0X0003              32  ; **** =========
0X0003              33  ; **** PROGRAM module (   6)
0X0003              34  ; **** =========
0X0003              35  PROGRAMMAIN            EQU       *
0X0003  0100FFFE    36                         PUSH      #RUNTIMESTACK        ; set SP
0X0007  0A          37                         POPSP     
0X0008  020100AA    38                         PUSHA     STATICDATA           ; set SB
0X000C  0C          39                         POPSB     
0X000D  01000150    40                         PUSH      #HEAPBASE            ; initialize heap
0X0011  01002000    41                         PUSH      #HEAPSIZE
0X0015  FF005A      42                         SVC       #SVC_INITIALIZE_HEAP
0X0018  A0002C      43                         CALL      PROGRAMBODY0010
0X001B  020A0000    44                         PUSHA     SB:0D0
0X001F  FF0033      45                         SVC       #SVC_WRITE_STRING
0X0022  FF002A      46                         SVC       #SVC_WRITE_ENDL
0X0025  01000000    47                         PUSH      #0D0                 ; terminate with status = 0
0X0029  FF0001      48                         SVC       #SVC_TERMINATE
0X002C              49  PROGRAMBODY0010        EQU       *
0X002C              50  ;    8    bite "," + " " + "world" + "!"
0X002C              51  ; **** PRINT statement (   7)
0X002C  020A001C    52                         PUSHA     SB:0D28
0X0030  FF0033      53                         SVC       #SVC_WRITE_STRING
0X0033              54  ; **** PRINT statement (   8)
0X0033  020A0023    55                         PUSHA     SB:0D35
0X0037  FF0033      56                         SVC       #SVC_WRITE_STRING
Page   2  Potato2.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X003A  020A0026    57                         PUSHA     SB:0D38
0X003E  FF0033      58                         SVC       #SVC_WRITE_STRING
0X0041              59  ;    9    bite ENDL
0X0041  020A0029    60                         PUSHA     SB:0D41
0X0045  FF0033      61                         SVC       #SVC_WRITE_STRING
0X0048              62  ;   10 }
0X0048              63  ;   11 
0X0048  020A0030    64                         PUSHA     SB:0D48
0X004C  FF0033      65                         SVC       #SVC_WRITE_STRING
0X004F              66  ;   12 
0X004F              67  ; **** PRINT statement (   9)
0X004F  FF002A      68                         SVC       #SVC_WRITE_ENDL
0X0052  A1          69                         RETURN    
0X0053              70  ; **** =========
0X0053              71  ; **** END (  12)
0X0053              72  ; **** =========
0X0053              73  ;--------------------------------------------------------------
0X0053              74  ; Common subroutines
0X0053              75  ;--------------------------------------------------------------
0X0053              76  CHRIsInRange           EQU       *                    ; CHR,LB,UB,RA
0X0053  01040002    77                         PUSH      SP:0D2               ; CHR,LB,UB,RA,LB
0X0057  01040004    78                         PUSH      SP:0D4               ; CHR,LB,UB,RA,LB,CHR
0X005B  70          79                         CMPI                           ; CHR,LB,UB,RA (set LEG)
0X005C  83007B      80                         JMPG      F0030                ; CHR,LB,UB,RA
0X005F  01040003    81                         PUSH      SP:0D3               ; CHR,LB,UB,RA,CHR
0X0063  01040002    82                         PUSH      SP:0D2               ; CHR,LB,UB,RA,CHR,UB
0X0067  70          83                         CMPI                           ; CHR,LB,UB,RA (set LEG)
0X0068  83007B      84                         JMPG      F0030                ; CHR,LB,UB,RA
0X006B              85  T0020                  EQU       *                    ; CHR,LB,UB,RA
0X006B  05          86                         SWAP                           ; CHR,LB,RA,UB
0X006C  040001      87                         DISCARD   #0D1                 ; CHR,LB,RA
0X006F  05          88                         SWAP                           ; CHR,RA,LB
0X0070  040001      89                         DISCARD   #0D1                 ; CHR,RA
0X0073  0100FFFF    90                         PUSH      #0XFFFF              ; CHR,RA,true
0X0077  05          91                         SWAP                           ; CHR,true,RA
0X0078  800088      92                         JMP       E0040                ; CHR,true,RA
0X007B              93  F0030                  EQU       *                    ; CHR,LB,UB,RA
0X007B  05          94                         SWAP                           ; CHR,LB,RA,UB
0X007C  040001      95                         DISCARD   #0D1                 ; CHR,LB,RA
0X007F  05          96                         SWAP                           ; CHR,RA,LB
0X0080  040001      97                         DISCARD   #0D1                 ; CHR,RA
0X0083  01000000    98                         PUSH      #0X0000              ; CHR,RA,false
0X0087  05          99                         SWAP                           ; CHR,false,RA
0X0088             100  E0040                  EQU       *                    ; CHR,true-or-false,RA
0X0088  A1         101                         RETURN                         ; CHR,true-or-false,RA
0X0089             102  ;------------------------------------------------------------
0X0089             103  ; Issue "Run-time error #X..X near line #X..X" to handle run-time errors
0X0089             104  ;------------------------------------------------------------
0X0089             105  HANDLERUNTIMEERROR     EQU       *
0X0089  FF002A     106                         SVC       #SVC_WRITE_ENDL
0X008C  020A0033   107                         PUSHA     SB:0D51
0X0090  FF0033     108                         SVC       #SVC_WRITE_STRING
0X0093  FF000B     109                         SVC       #SVC_WRITE_INTEGER
0X0096  020A0045   110                         PUSHA     SB:0D69
0X009A  FF0033     111                         SVC       #SVC_WRITE_STRING
0X009D  FF000B     112                         SVC       #SVC_WRITE_INTEGER
Page   3  Potato2.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X00A0  FF002A     113                         SVC       #SVC_WRITE_ENDL
0X00A3  01000001   114                         PUSH      #0D1
0X00A7  FF0001     115                         SVC       #SVC_TERMINATE
0X00AA             116  ;------------------------------------------------------------
0X00AA             117  ; Static allocation of global data and PROGRAM module data
0X00AA             118  ;------------------------------------------------------------
0X00AA             119  STATICDATA             EQU       *
0X00AA  001A001A   120                         DS        "Normal program termination"
0X00AE  004E006F
0X00B2  0072006D
0X00B6  0061006C
0X00BA  00200070
0X00BE  0072006F
0X00C2  00670072
0X00C6  0061006D
0X00CA  00200074
0X00CE  00650072
0X00D2  006D0069
0X00D6  006E0061
0X00DA  00740069
0X00DE  006F006E
0X00E2  00050005   121                         DS        "Howdy"
0X00E6  0048006F
0X00EA  00770064
0X00EE  0079    
0X00F0  00010001   122                         DS        ","
0X00F4  002C    
0X00F6  00010001   123                         DS        " "
0X00FA  0020    
0X00FC  00050005   124                         DS        "world"
0X0100  0077006F
0X0104  0072006C
0X0108  0064    
0X010A  00010001   125                         DS        "!"
0X010E  0021    
0X0110  00100010   126                         DS        "Run-time error #"
0X0114  00520075
0X0118  006E002D
0X011C  00740069
0X0120  006D0065
0X0124  00200065
0X0128  00720072
0X012C  006F0072
0X0130  00200023
0X0134  000C000C   127                         DS        " near line #"
0X0138  0020006E
0X013C  00650061
0X0140  00720020
0X0144  006C0069
0X0148  006E0065
0X014C  00200023
0X0150             128  ;------------------------------------------------------------
0X0150             129  ; Heap space for dynamic memory allocation (to support future SPL syntax)
0X0150             130  ;------------------------------------------------------------
0X0150             131  HEAPBASE               EQU       *
0X0150             132  HEAPSIZE               EQU       0B0010000000000000   ; 8K bytes = 4K words
Page   4  Potato2.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0150             133  ;------------------------------------------------------------
0X0150             134  ; Run-time stack
0X0150             135  ;------------------------------------------------------------
0X0150             136  RUNTIMESTACK           EQU       0XFFFE


  PC   SP TOS0 TOS1 TOS2 mnemonic  information
---- ---- ---- ---- ---- --------- ----------------------------------------------
0000 FFFE                 JMP       0X0003
0003 FFFE                 PUSH      #memory[EA = 0X0005] = 0XFFFE
0007 FFFC FFFE            POPSP     SP = 0XFFFE
0008 FFFE                 PUSHA     memory[EA = 0X00AA]
000C FFFC 00AA            POPSB     SB = 0X00AA
000D FFFE                 PUSH      #memory[EA = 0X000F] = 0X0150
0011 FFFC 0150            PUSH      #memory[EA = 0X0013] = 0X2000
-------------------------------------------------------------
FREE nodes list
   0X0150:0X214F(0X1FFC)
-------------------------------------------------------------
0015 FFFA 2000 0150       SVC       #90 initialize heap, heapBase = 0X0150, heapSize = 0X2000 words
0018 FFFE                 CALL      0X002C return to 0X001B
002C FFFC 001B            PUSHA     SB( 28) memory[EA = 0X00E2]
0030 FFFA 00E2 001B       SVC       #51 write string
0033 FFFC 001B            PUSHA     SB( 35) memory[EA = 0X00F0]
0037 FFFA 00F0 001B       SVC       #51 write string
003A FFFC 001B            PUSHA     SB( 38) memory[EA = 0X00F6]
003E FFFA 00F6 001B       SVC       #51 write string
0041 FFFC 001B            PUSHA     SB( 41) memory[EA = 0X00FC]
0045 FFFA 00FC 001B       SVC       #51 write string
0048 FFFC 001B            PUSHA     SB( 48) memory[EA = 0X010A]
004C FFFA 010A 001B       SVC       #51 write string
Howdy, world!
004F FFFC 001B            SVC       #42 write ENDL
0052 FFFC 001B            RETURN    to 0X001B
001B FFFE                 PUSHA     SB(  0) memory[EA = 0X00AA]
001F FFFC 00AA            SVC       #51 write string
Normal program termination
0022 FFFE                 SVC       #42 write ENDL
0025 FFFE                 PUSH      #memory[EA = 0X0027] = 0X0000
0029 FFFC 0000            SVC       #1 terminate program with status 0, SP = 0XFFFE

